{"version":3,"sources":["components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","App.js","index.js"],"names":["Form","state","name","number","addContact","onSubmit","props","id","shortid","generate","onChange","target","value","setState","checkContact","contacts","checkName","toLocaleLowerCase","find","contact","alert","elem","preventDefault","reset","this","className","htmlFor","nameInputId","type","pattern","title","required","numberInputId","Component","Contacts","deleteContacts","map","onClick","Filter","Phonebook","filter","formSubmit","changeFilter","filterContacts","getFilter","includes","contactId","prev","localStorage","getItem","parseContacts","JSON","parse","prevProps","prevState","setItem","stringify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed41f41c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport \"./Form.css\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addContact = () => {\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    const contactId = shortid.generate();\r\n    const newContact = { name, number, id: contactId };\r\n    onSubmit(newContact);\r\n  };\r\n\r\n  onChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  checkContact = () => {\r\n    const { name } = this.state;\r\n    const { contacts } = this.props;\r\n    const checkName = name.toLocaleLowerCase();\r\n    contacts.find(contact =>\r\n      contact.name.toLocaleLowerCase() === checkName)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.addContact();\r\n  };\r\n\r\n  onSubmit = (elem) => {\r\n    elem.preventDefault();\r\n    this.reset();\r\n    this.checkContact();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <label className=\"label\" htmlFor={this.nameInputId}>\r\n          <p className=\"text\">Name</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.onChange}\r\n            id={shortid.generate()}\r\n          ></input>\r\n        </label>\r\n        <label className=\"label\" htmlFor={this.numberInputId}>\r\n          <p className=\"text\">Number</p>\r\n          <input\r\n            className=\"input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.onChange}\r\n            id={shortid.generate()}\r\n          />\r\n        </label>\r\n        <button className=\"btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import './Contacts.css';\r\n\r\nfunction Contacts({ contacts, deleteContacts }){\r\n  return (\r\n    <ul className=\"list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"listItem\" key={id}>\r\n          {name}: {number}\r\n          <button className='btn' onClick={() => deleteContacts(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Contacts;","import \"./Filter.css\";\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className=\"label\">\r\n      <p className=\"text\">Find contacts by name</p>\r\n      <input type=\"text\" className=\"input\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"../Form/Form\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport \"./Phonebook.css\";\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n   componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  formSubmit = contact => {\r\n    const { contacts } = this.state;\r\n    this.setState({ contacts: [contact, ...contacts] });\r\n  };\r\n\r\n  changeFilter = ({ target }) => {\r\n    this.setState({ filter: target.value });\r\n  };\r\n\r\n  filterContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const getFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(getFilter)\r\n    );\r\n  };\r\n\r\n  deleteContacts = contactId => {\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      state,\r\n      formSubmit,\r\n      changeFilter,\r\n      filterContacts,\r\n      deleteContacts,\r\n    } = this;\r\n    const { contacts, filter } = state;\r\n    return (\r\n      <div className=\"section\">\r\n        <div>\r\n          <h1 className=\"title\">Phonebook</h1>\r\n          <Form onSubmit={formSubmit} contacts={contacts} />\r\n        </div>\r\n        <div className=\"contacts\">\r\n          <h2 className=\"tittle\">Contacts</h2>\r\n          <div className=\"contactsList\">\r\n            <Filter value={filter} onChange={changeFilter} />\r\n            <Contacts\r\n              contacts={filterContacts()}\r\n              deleteContacts={deleteContacts}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import Phonebook from \"./components/Phonebook/Phonebook\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <section className=\"main\">\n      <Phonebook />\n    </section>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}